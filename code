import tkinter as tk
from tkinter import messagebox
import mysql.connector

def connect_db():
    return mysql.connector.connect(
        host="localhost", 
        user="root", 
        password="yournewpassword", 
        database="bank_management_system"
    ) 

def login_user():
    username = entry_username.get()
    password = entry_password.get()

    if not username or not password:
        messagebox.showwarning("Input Error", "Please enter both username and password")
        return

    db = connect_db()
    cursor = db.cursor()

    cursor.execute("SELECT * FROM users WHERE username = %s AND password = %s", (username, password))
    result = cursor.fetchone()
    
    if result:
        messagebox.showinfo("Login Successful", "Welcome to the Bank Management System!")
        window.destroy()
        open_main_screen(result[1], result[0])
    else:
        messagebox.showerror("Login Failed", "Incorrect username or password")
    
    db.close()

def open_main_screen(username, user_id):
    main_screen = tk.Tk()
    main_screen.title(f"Welcome, {username}!")
    main_screen.geometry("600x400")
    main_screen.config(bg="gray")

    tk.Label(main_screen, text=f"Welcome, {username}!", font=('Arial', 16), bg="gray", fg="lightblue").pack(pady=20)

    tk.Button(main_screen, text="View Account Details", font=('Arial', 14), width=20, bg="lightblue", fg="black", command=lambda: view_account_details(user_id)).pack(pady=10)

    tk.Button(main_screen, text="Apply for Microloan", font=('Arial', 14), width=20, bg="lightblue", fg="black", command=lambda: apply_microloan(user_id)).pack(pady=10)

    tk.Button(main_screen, text="Deposit Funds", font=('Arial', 14), width=20, bg="lightblue", fg="black", command=lambda: deposit_funds(user_id)).pack(pady=10)

    tk.Button(main_screen, text="View Transactions", font=('Arial', 14), width=20, bg="lightblue", fg="black", command=lambda: view_transactions(user_id)).pack(pady=10)

    tk.Button(main_screen, text="Logout", font=('Arial', 14), width=20, bg="lightblue", fg="black", command=main_screen.quit).pack(pady=10)

    main_screen.mainloop()

def view_account_details(user_id):
    db = connect_db()
    cursor = db.cursor()
    cursor.execute("SELECT username, savings_balance FROM users WHERE user_id = %s", (user_id,))
    result = cursor.fetchone()

    if result:
        user_info = f"Username: {result[0]}\nBalance: ${result[1]:.2f}"
        messagebox.showinfo("Account Details", user_info)
    else:
        messagebox.showerror("Error", "Account details not found.")
    
    db.close()
    
def apply_microloan(user_id):
    def submit_loan():
        loan_amount = entry_loan_amount.get()

        if not loan_amount or float(loan_amount) <= 0:
            messagebox.showwarning("Input Error", "Please enter a valid loan amount.")
            return

        try:
            db = connect_db()
            cursor = db.cursor()

            cursor.execute("INSERT INTO transactions (user_id, transaction_type, amount) VALUES (%s, %s, %s)", 
                           (user_id, 'Loan', float(loan_amount)))
            db.commit()

            messagebox.showinfo("Loan Application", f"Loan of ${loan_amount} applied successfully!")

            loan_window.destroy()
            db.close()

        except mysql.connector.Error as err:
            messagebox.showerror("Database Error", f"Error occurred: {err}")

    loan_window = tk.Toplevel()
    loan_window.title("Apply for Microloan")

    tk.Label(loan_window, text="Enter Loan Amount", font=('Arial', 14), bg="gray", fg="lightblue").pack(pady=20)
    entry_loan_amount = tk.Entry(loan_window, font=('Arial', 12))
    entry_loan_amount.pack(pady=10)

    tk.Button(loan_window, text="Submit Loan", font=('Arial', 14), width=20, bg="lightblue", fg="black", command=submit_loan).pack(pady=20)

def deposit_funds(user_id):
    def submit_deposit():
        deposit_amount = entry_deposit_amount.get()

        if not deposit_amount or float(deposit_amount) <= 0:
            messagebox.showwarning("Input Error", "Please enter a valid deposit amount.")
            return

        try:
            db = connect_db()
            cursor = db.cursor()

            cursor.execute("UPDATE users SET savings_balance = savings_balance + %s WHERE user_id = %s", 
                           (float(deposit_amount), user_id))
            db.commit()

            cursor.execute("INSERT INTO transactions (user_id, transaction_type, amount) VALUES (%s, %s, %s)", 
                           (user_id, 'Deposit', float(deposit_amount)))
            db.commit()

            messagebox.showinfo("Deposit Successful", f"Deposited ${deposit_amount} into your account!")

            deposit_window.destroy()
            db.close()

        except mysql.connector.Error as err:
            messagebox.showerror("Database Error", f"Error occurred: {err}")

    deposit_window = tk.Toplevel()
    deposit_window.title("Deposit Funds")

    tk.Label(deposit_window, text="Enter Deposit Amount", font=('Arial', 14), bg="gray", fg="lightblue").pack(pady=20)
    entry_deposit_amount = tk.Entry(deposit_window, font=('Arial', 12))
    entry_deposit_amount.pack(pady=10)

    tk.Button(deposit_window, text="Submit Deposit", font=('Arial', 14), width=20, bg="lightblue", fg="black", command=submit_deposit).pack(pady=20)

def view_transactions(user_id):
    db = connect_db()
    cursor = db.cursor()

    try:
        cursor.execute("SELECT transaction_type, amount, transaction_date FROM transactions WHERE user_id = %s", (user_id,))
        transactions = cursor.fetchall()

        if transactions:
            transaction_info = ""
            for transaction in transactions:
                transaction_info += f"{transaction[0]}: ${transaction[1]:.2f} on {transaction[2]}\n"
            messagebox.showinfo("Transactions", transaction_info)
        else:
            messagebox.showinfo("No Transactions", "No transactions found.")

    except mysql.connector.Error as err:
        messagebox.showerror("Database Error", f"Error occurred: {err}")

    db.close()

def create_account():
    def submit_account():
        username = entry_new_username.get()
        password = entry_new_password.get()

        if not username or not password:
            messagebox.showwarning("Input Error", "Username and password are required")
            return

        db = connect_db()
        cursor = db.cursor()

        cursor.execute("INSERT INTO users (username, password, savings_balance) VALUES (%s, %s, %s)", 
                       (username, password, 0.00))
        db.commit()

        messagebox.showinfo("Account Created", "Your account has been successfully created!")
        create_account_window.destroy()
        db.close()

    create_account_window = tk.Toplevel(window)
    create_account_window.title("Create Account")

    tk.Label(create_account_window, text="Username", font=('Arial', 14), bg="gray", fg="lightblue").grid(row=0, column=0, padx=10, pady=20)
    entry_new_username = tk.Entry(create_account_window, font=('Arial', 12))
    entry_new_username.grid(row=0, column=1, padx=10, pady=20)

    tk.Label(create_account_window, text="Password", font=('Arial', 14), bg="gray", fg="lightblue").grid(row=1, column=0, padx=10, pady=20)
    entry_new_password = tk.Entry(create_account_window, font=('Arial', 12), show="*")
    entry_new_password.grid(row=1, column=1, padx=10, pady=20)

    tk.Button(create_account_window, text="Submit", command=submit_account, font=('Arial', 14), width=20, bg="lightblue", fg="black").grid(row=2, column=0, columnspan=2, pady=20)

window = tk.Tk()
window.title("Bank Management System Login")

screen_width = window.winfo_screenwidth()
screen_height = window.winfo_screenheight()

window_width = 600
window_height = 400

x = (screen_width // 2) - (window_width // 2)
y = (screen_height // 2) - (window_height // 2)

window.geometry(f"{window_width}x{window_height}+{x}+{y}")
window.config(bg="gray")
tk.Label(window, text="Username", font=('Arial', 14), bg="gray", fg="lightblue").grid(row=0, column=0, padx=20, pady=20)
entry_username = tk.Entry(window, font=('Arial', 12))
entry_username.grid(row=0, column=1, padx=20, pady=20)

tk.Label(window, text="Password", font=('Arial', 14), bg="gray", fg="lightblue").grid(row=1, column=0, padx=20, pady=20)
entry_password = tk.Entry(window, font=('Arial', 12), show="*")
entry_password.grid(row=1, column=1, padx=20, pady=20)

tk.Button(window, text="Login", command=login_user, font=('Arial', 14), width=20, bg="lightblue", fg="black").grid(row=2, column=0, columnspan=2, pady=20)
tk.Button(window, text="Create Account", command=create_account, font=('Arial', 14), width=20, bg="lightblue", fg="black").grid(row=3, column=0, columnspan=2, pady=20)

window.mainloop()
